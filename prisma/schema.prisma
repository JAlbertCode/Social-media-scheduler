// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  posts         Post[]
  mediaFiles    Media[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token         String? @db.Text
  session_state    String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Post {
  id          String    @id @default(cuid())
  content     String
  userId      String
  mediaIds    String[]
  platforms   Platform[]
  status      PostStatus
  scheduledFor DateTime?
  notionPageId String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  user        User      @relation(fields: [userId], references: [id])
  media       Media[]   @relation("PostMedia")
}

model Media {
  id          String    @id @default(cuid())
  userId      String
  type        MediaType
  url         String
  googleDriveId String?
  mimeType    String
  size        Int
  dimensions  Json?     // For images: { width, height }
  duration    Int?      // For videos: duration in seconds
  createdAt   DateTime  @default(now())
  
  user        User      @relation(fields: [userId], references: [id])
  posts       Post[]    @relation("PostMedia")
}

enum MediaType {
  IMAGE
  VIDEO
}

enum Platform {
  TWITTER
  INSTAGRAM
  TIKTOK
  YOUTUBE
  LINKEDIN
  THREADS
  BLUESKY
  MASTODON
  WARPCAST
}

enum PostStatus {
  DRAFT
  SCHEDULED
  PUBLISHED
  FAILED
}